{"remainingRequest":"C:\\Users\\july\\Desktop\\meiyiapp\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\july\\Desktop\\meiyiapp\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\july\\Desktop\\meiyiapp\\vue_app_00\\src\\components\\home\\shopcart.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\july\\Desktop\\meiyiapp\\vue_app_00\\src\\components\\home\\shopcart.vue","mtime":1550111278661},{"path":"C:\\Users\\july\\Desktop\\meiyiapp\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\Users\\july\\Desktop\\meiyiapp\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\Users\\july\\Desktop\\meiyiapp\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Toast } from \"mint-ui\";\nexport default {\n  data: function data() {\n    return {\n      list: [],\n      cb: \"\" //保存购物车列表\n\n    };\n  },\n  methods: {\n    loadmore: function loadmore() {\n      var _this = this;\n\n      //创建变量，保存url地址，发送ajax请求\n      var url = \"http://127.0.0.1:3000/cartlist?uid=1\";\n      this.axios.get(url).then(function (result) {\n        //console.log(result.data)\n        _this.list = result.data.data; //为列表中的每个对象添加属性，表示复选框的转态，true，选中，\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = _this.list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var item = _step.value;\n            item.cb = false;\n            item.cb = _this.cb;\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      });\n    },\n    delitem: function delitem(e) {\n      var _this2 = this;\n\n      //e事件对象 ，target 触发事件对象即button  dataset：自定义属性的集合。 与data-后面的值保持一致\n      var id = e.target.dataset.id;\n      var idx = e.target.dataset.idx;\n      console.log(idx);\n      var url = \"http://127.0.0.1:3000/delcartitem?id=\" + id;\n      this.axios.get(url).then(function (result) {\n        if (result.data.code == 1) Toast(\"删除成功\");\n\n        _this2.list.splice(idx, 1); //删除数组中对应下标的商品\n\n      });\n    },\n    selectAll: function selectAll(e) {\n      this.cb = e.target.checked; //console.log(cb)  //true\n\n      /*for(var item of this.list){\r\n          console.log(item.cb)  //false\r\n         \r\n        }*/\n\n      this.loadmore();\n    }\n  },\n  created: function created() {\n    this.loadmore();\n  }\n};",{"version":3,"sources":["shopcart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,SAAA,KAAA,QAAA,SAAA;AACA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,YAAA,EADA;AAEA,UAAA,EAFA,CAEA;;AAFA,KAAA;AAIA,GANA;AAOA,WAAA;AACA,YADA,sBACA;AAAA;;AACA;AACA,UAAA,MAAA,sCAAA;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA,IAAA,CAAA,kBAAA;AACA;AACA,cAAA,IAAA,GAAA,OAAA,IAAA,CAAA,IAAA,CAFA,CAGA;;AAHA;AAAA;AAAA;;AAAA;AAIA,+BAAA,MAAA,IAAA,8HAAA;AAAA,gBAAA,IAAA;AACA,iBAAA,EAAA,GAAA,KAAA;AACA,iBAAA,EAAA,GAAA,MAAA,EAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,OARA;AASA,KAbA;AAcA,WAdA,mBAcA,CAdA,EAcA;AAAA;;AACA;AACA,UAAA,KAAA,EAAA,MAAA,CAAA,OAAA,CAAA,EAAA;AACA,UAAA,MAAA,EAAA,MAAA,CAAA,OAAA,CAAA,GAAA;AACA,cAAA,GAAA,CAAA,GAAA;AACA,UAAA,MAAA,0CAAA,EAAA;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA,IAAA,CAAA,kBAAA;AACA,YAAA,OAAA,IAAA,CAAA,IAAA,IAAA,CAAA,EAAA,MAAA,MAAA;;AACA,eAAA,IAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,EAFA,CAEA;;AACA,OAHA;AAIA,KAxBA;AAyBA,aAzBA,qBAyBA,CAzBA,EAyBA;AACA,WAAA,EAAA,GAAA,EAAA,MAAA,CAAA,OAAA,CADA,CAEA;;AACA;;;;;AAKA,WAAA,QAAA;AAEA;AAnCA,GAPA;AA6CA,SA7CA,qBA6CA;AACA,SAAA,QAAA;AACA;AA/CA,CAAA","sourcesContent":["<template>\r\n    <div class=\"app=shopcart\">   \r\n        <div class=\"mui-card\">\r\n\t\t\t\t<div class=\"mui-card-header\" >\r\n                    <h3>购物车列表：</h3>\r\n                    \r\n                </div>\r\n\t\t\t\t<div class=\"mui-card-content\">\r\n                    <div class=\"mui-card-content-inner\">\r\n                         <input type=\"checkbox\" @click=\"selectAll\" >全选\r\n                    </div>\r\n\t\t\t\t\t<div class=\"mui-card-content-inner\" v-for=\"(item,i) in list\" :key=\"item.id\">\r\n                        <input type=\"checkbox\":checked=\"item.cb\">\r\n                        {{item.fname}}\r\n                       {{item.price}}\r\n                    \r\n                        <a @click=\"delitem\" :data-id=\"item.id\" :data-idx=\"i\"> 删除</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t<div class=\"mui-card-footer\">\r\n                    <button  >删除选中的商品</button>\r\n\t\t\t\t\t小计：￥3.00\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport{Toast} from \"mint-ui\"\r\n    export default{\r\n        data(){\r\n            return {\r\n                list:[],\r\n                cb:\"\" //保存购物车列表\r\n            }\r\n        },\r\n        methods:{\r\n            loadmore(){\r\n                //创建变量，保存url地址，发送ajax请求\r\n                var url=\"http://127.0.0.1:3000/cartlist?uid=1\";\r\n                this.axios.get(url).then(result=>{\r\n                    //console.log(result.data)\r\n                    this.list=result.data.data;\r\n                    //为列表中的每个对象添加属性，表示复选框的转态，true，选中，\r\n                    for(var item of this.list){\r\n                        item.cb=false;\r\n                        item.cb=this.cb;\r\n                    }\r\n                })\r\n            },\r\n            delitem(e){\r\n                //e事件对象 ，target 触发事件对象即button  dataset：自定义属性的集合。 与data-后面的值保持一致\r\n                var id=e.target.dataset.id;\r\n                var idx=e.target.dataset.idx;\r\n                console.log(idx)\r\n                var url=\"http://127.0.0.1:3000/delcartitem?id=\"+id\r\n                this.axios.get(url).then(result=>{\r\n                    if(result.data.code==1) Toast(\"删除成功\");\r\n                    this.list.splice(idx,1)   //删除数组中对应下标的商品\r\n                })\r\n            },\r\n            selectAll(e){\r\n               this.cb=e.target.checked;\r\n                //console.log(cb)  //true\r\n                /*for(var item of this.list){\r\n                    console.log(item.cb)  //false\r\n                   \r\n\r\n                }*/\r\n                this.loadmore();\r\n\r\n            }\r\n          \r\n        },\r\n        created(){\r\n            this.loadmore();\r\n        }\r\n    }\r\n</script>\r\n<style>\r\n    .mui-card-content-inner a{\r\n        float:right;\r\n        color:#000;\r\n    }\r\n</style>"],"sourceRoot":"src\\components\\home"}]}